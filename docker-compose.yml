version: '3.8'
services:
  modulbank:
    build:
      context: .
      dockerfile: ./AccountService/Dockerfile
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - Authentication__Audience=account-service
      - Authentication__Issuer=http://localhost:8080/realms/modulbank
      - Authentication__MetadataAddress=http://keycloak:8080/realms/modulbank/.well-known/openid-configuration
      - Authentication__RequireHttpsMetadata=false
      - Database__ConnectionStrings=Host=db;Port=5432;Database=modulbankdb;Username=modulbankuser;Password=modulbankpass
      - Database__MustMigrate=true
      - ConnectionStrings__Hangfire="Host=db;Port=5432;Database=hangfiredb;Username=modulbankuser;Password=modulbankpass"
      - RabbitMq__Host=bus
      - RabbitMq__VirtualHost=/
      - RabbitMq__User=guest
      - RabbitMq__Password=guest
      - RabbitMq__Port=5672
      - RabbitMq__ExchangeName=account.events

    depends_on:
      - db
      - keycloak
      - bus
    networks:
      - network

  db:
    image: postgres
    environment:
      - POSTGRES_USER=modulbankuser
      - POSTGRES_PASSWORD=modulbankpass
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - network
    configs:
      - source: init-sql
        target: /docker-entrypoint-initdb.d/init.sql

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    volumes:
      - ./realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - network
  
  bus:
    image: rabbitmq:4-management
    container_name: bus
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

    volumes:
      - bus_data:/var/lib/rabbitmq
    networks:
      - network
    command: >
      bash -c "
        rabbitmq-server -detached;
        echo 'Waiting for RabbitMQ to start...';
        until rabbitmqctl node_health_check; do
          echo 'Still waiting...';
          sleep 3;
        done;
        echo 'RabbitMQ is ready, creating topology...';
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare exchange name=account.events type=topic durable=true;
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare queue name=account.crm durable=true;
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare queue name=account.notifications durable=true;
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare queue name=account.antifraud durable=true;
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare queue name=account.audit durable=true;
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare binding source=account.events destination=account.crm destination_type=queue routing_key='account.*';
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare binding source=account.events destination=account.notifications destination_type=queue routing_key='money.*';
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare binding source=account.events destination=account.antifraud destination_type=queue routing_key='client.*';
        rabbitmqadmin --host=127.0.0.1 --port=15672 --username=guest --password=guest declare binding source=account.events destination=account.audit destination_type=queue routing_key='#';
        rabbitmqctl stop;
        exec rabbitmq-server;
      "

volumes:
  db_data:
  bus_data:

configs:
  init-sql:
    content: |
      CREATE DATABASE modulbankdb;
      CREATE DATABASE hangfiredb;
      -- You can add more setup here
      -- CREATE USER extrauser WITH PASSWORD 'password';
      -- GRANT ALL PRIVILEGES ON DATABASE hangfiredb TO extrauser;

networks:
  network:
    driver: bridge
